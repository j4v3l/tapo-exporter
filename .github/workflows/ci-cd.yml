name: CI/CD Pipeline

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  release:
    types: [published]

env:
  DOCKER_IMAGE: j4v3l/tapo-exporter
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .
        
    - name: Run tests
      run: |
        pytest tests/ -v --cov=tapo_exporter --cov-report=term-missing
        pytest test_kasa.py -v
        
    - name: Run linting
      run: |
        black . --check
        isort . --check-only
        flake8 .
        mypy .

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/riscv64
        driver-opts: |
          image=moby/buildkit:latest
          network=host
      
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/dev' }}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=beta,enable=${{ github.ref == 'refs/heads/dev' }}
          type=ref,event=branch
          type=sha,format=short
          
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/riscv64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_DATE=${{ github.event.repository.created_at }}
          VCS_REF=${{ github.sha }}
          VERSION=${{ github.ref_name }}
          DESCRIPTION="A Prometheus and InfluxDB exporter for Tapo smart devices"
          CATEGORY="monitoring"
          
  release:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Update version
      run: |
        echo "${{ github.event.release.tag_name }}" > VERSION
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          VERSION
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 